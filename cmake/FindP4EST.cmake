# - Try to find P4EST
#

find_path (P4EST_DIR include/p4est.h HINTS ENV P4EST_DIR DOC "P4EST Directory")

IF(EXISTS ${P4EST_DIR}/include/p4est.h)
  SET(P4EST_FOUND YES)
  SET(P4EST_INCLUDES ${P4EST_DIR})
  find_path (P4EST_INCLUDE_DIR p4est.h HINTS "${P4EST_DIR}" PATH_SUFFIXES include NO_DEFAULT_PATH)
  list(APPEND P4EST_INCLUDES ${P4EST_INCLUDE_DIR})
  find_library(P4EST_LIBRARY NAMES libp4est.a PATHS ${P4EST_DIR}/lib)
  list(APPEND P4EST_LIBRARIES ${P4EST_LIBRARY})
  find_library(P4EST_SC_LIBRARY NAMES libsc.a PATHS ${P4EST_DIR}/lib)
  list(APPEND P4EST_SC_LIBRARIES ${P4EST_SC_LIBRARY})
  find_library(P4EST_Z_LIBRARY NAMES libz.a PATHS ${P4EST_DIR}/lib)
  list(APPEND P4EST_Z_LIBRARIES ${P4EST_Z_LIBRARY})
ELSE(EXISTS ${P4EST_DIR}/include/p4est.h)
  SET(P4EST_FOUND NO)
ENDIF(EXISTS ${P4EST_DIR}/include/p4est.h)

include(FindPackageHandleStandardArgs)
find_package_handle_standard_args(P4EST DEFAULT_MSG P4EST_LIBRARIES P4EST_SC_LIBRARIES P4EST_Z_LIBRARIES P4EST_INCLUDES)
